package model

// CreateUserInput represents the data required to create a new user
type CreateUserInput struct {
	Email    string `json:"email" binding:"required,email"`
	Username string `json:"username" binding:"required"`
	Password string `json:"password" binding:"required,min=8"`
	Role     string `json:"role" binding:"omitempty"`
}

// UpdateUserInput represents the data that can be updated for a user
type UpdateUserInput struct {
	Username  string  `json:"username" binding:"omitempty"`
	AvatarURL *string `json:"avatar_url" binding:"omitempty"`
	Active    *bool   `json:"active" binding:"omitempty"`
	Role      string  `json:"role" binding:"omitempty"`
}

// LoginInput represents the data required for user login
type LoginInput struct {
	Email    string `json:"email" binding:"required,email"`
	Password string `json:"password" binding:"required"`
}

// RefreshTokenInput represents the data required to refresh a token
type RefreshTokenInput struct {
	RefreshToken string `json:"refresh_token" binding:"required"`
}

// ChangePasswordInput represents the data required to change a password
type ChangePasswordInput struct {
	CurrentPassword string `json:"current_password" binding:"required"`
	NewPassword     string `json:"new_password" binding:"required,min=8"`
}

// UserResponse is the model returned to clients
type UserResponse struct {
	ID        string  `json:"id"`
	Email     string  `json:"email"`
	Username  string  `json:"username"`
	Role      string  `json:"role"`
	Active    bool    `json:"active"`
	AvatarURL *string `json:"avatar_url,omitempty"`
	CreatedAt string  `json:"created_at"`
	UpdatedAt string  `json:"updated_at"`
}

// AuthResponse contains authentication response data
type AuthResponse struct {
	User         UserResponse `json:"user"`
	AccessToken  string       `json:"access_token"`
	RefreshToken string       `json:"refresh_token"`
	ExpiresIn    int64        `json:"expires_in"`
}

// NonceResponse contains the nonce generated by the server
type NonceResponse struct {
	Nonce string `json:"nonce"`
}
